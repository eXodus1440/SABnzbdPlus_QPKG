######################################################################
# All package specific functions shall call 'err_log MSG' if an error
# is detected that shall terminate the installation.
######################################################################

######################################################################
# Define any package specific operations that shall be performed when
# the package is removed.
######################################################################
#PKG_PRE_REMOVE="{
#}"
#

PKG_MAIN_REMOVE="{
#removing stuff that doesn't exist isn't a real issue so we just try to cleanup for all versions at once
#x19 and x86 (-f flag to prevent errors on deleting files that do not exist)
/bin/rm -f "/usr/bin/ionice"
/bin/rm -f "/opt/lib/python2.6/site-packages/yenc.py"
/bin/rm -f "/opt/lib/python2.6/site-packages/_yenc.so"
#x09 only
/bin/rm -f "/mnt/HDA_ROOT/rootfs_2_3_6/usr/bin/ionice"
/bin/rm -f "/mnt/HDA_ROOT/rootfs_2_3_6/opt/lib/python2.6/site-packages/yenc.py"
/bin/rm -f "/mnt/HDA_ROOT/rootfs_2_3_6/opt/lib/python2.6/site-packages/_yenc.so"
}"

#
#PKG_POST_REMOVE="{
#}"
#
######################################################################
# Define any package specific initialization that shall be performed
# before the package is installed.
######################################################################
pkg_init(){
	[ -d "$QPKG_ROOTFS" ] || QPKG_ROOTFS=""
}
#
######################################################################
# Define any package specific requirement checks that shall be
# performed before the package is installed.
######################################################################
pkg_check_requirement(){
	[ -d "$SYS_DOWNLOAD_PATH" ] || err_log "cannot find the Download share"
}


######################################################################
# Define any package specific operations that shall be performed when
# the package is installed.
######################################################################
pkg_pre_install(){
	# as stopping the previous versions of sab does not always work because of a bug in ps in 3.40
	# we need to manually kill it to be certain it really will work fine.
	for pid in $(/bin/pidof python); do
	  /bin/grep -q "SABnzbd.py" /proc/$pid/cmdline && /bin/kill $pid
	done
	/bin/sleep 5

	#remove left over config files which may exist because of previous bugs
	cd ${SYS_QPKG_DIR}
	rfiles=$(/usr/bin/find ./ -type f  -name '*qdkorig')
	for rfile in $rfiles; do /bin/mv $rfile; done
	rfiles=$(/usr/bin/find ./ -type f  -name '*qdksave')
	for rfile in $rfiles; do /bin/rm $rfile; done
}

#
pkg_install(){
	# create symbolic links for required bin-utils and library files
    $CMD_LN -sf "${SYS_QPKG_DIR}/bin-utils/ionice" "/usr/bin/ionice"
	$CMD_LN -sf "${SYS_QPKG_DIR}/lib/_yenc.so" "/opt/lib/python2.6/site-packages/_yenc.so" 
	$CMD_LN -sf "${SYS_QPKG_DIR}/lib/yenc.py" "/opt/lib/python2.6/site-packages/yenc.py" 

	#check if this is an upgrade from an older version (<0.6), and copy the config file in that case
	[ -d "${QPKG_ROOTFS}${SYS_QPKG_DIR}/root" ] && $CMD_CP "${QPKG_ROOTFS}${SYS_QPKG_DIR}/root/.sabnzbd/sabnzbd.ini" ${QPKG_ROOTFS}${SYS_QPKG_DIR}/Config/ && $CMD_RM -r "${QPKG_ROOTFS}${SYS_QPKG_DIR}/root"
	
	#check if there is already an ini file (upgrading), if not put the default one into place
	[ -f "${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini" ] || $CMD_MV  ${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini.org ${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini

 	#reset ip config to be sure it all will work with other packages like Sickbeard and Couchpotato
	$CMD_SETCFG misc host "0.0.0.0" -f ${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini
	
	#Configure SABNZBD to use Download or Qdownload, depending on what was found
        $CMD_SETCFG misc log_dir $SYS_DOWNLOAD_PATH/sabnzbd/logs -f ${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini
        $CMD_SETCFG misc download_dir $SYS_DOWNLOAD_PATH/sabnzbd/incomplete -f ${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini
        $CMD_SETCFG misc complete_dir $SYS_DOWNLOAD_PATH/sabnzbd/complete -f ${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini
        $CMD_SETCFG misc nzb_backup_dir $SYS_DOWNLOAD_PATH/sabnzbd/nzb/backup -f ${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini
        $CMD_SETCFG misc cache_dir $SYS_DOWNLOAD_PATH/sabnzbd/cache -f ${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini
        $CMD_SETCFG misc dirscan_dir $SYS_DOWNLOAD_PATH/sabnzbd/nzb -f ${QPKG_ROOTFS}$SYS_QPKG_DIR/Config/sabnzbd.ini

	#Creates all directories needed for sabnzbd download structure
        $CMD_MKDIR -p "$SYS_DOWNLOAD_PATH/sabnzbd"
        $CMD_CHMOD 777 $SYS_DOWNLOAD_PATH/sabnzbd
        $CMD_MKDIR -p "$SYS_DOWNLOAD_PATH/sabnzbd/cache"
        $CMD_CHMOD 777 $SYS_DOWNLOAD_PATH/sabnzbd/cache
        $CMD_MKDIR -p "$SYS_DOWNLOAD_PATH/sabnzbd/complete"
        $CMD_CHMOD 777 $SYS_DOWNLOAD_PATH/sabnzbd/complete
        $CMD_MKDIR -p "$SYS_DOWNLOAD_PATH/sabnzbd/incomplete"
        $CMD_CHMOD 777 $SYS_DOWNLOAD_PATH/sabnzbd/incomplete
        $CMD_MKDIR -p "$SYS_DOWNLOAD_PATH/sabnzbd/logs"
        $CMD_CHMOD 777 $SYS_DOWNLOAD_PATH/sabnzbd/logs
        $CMD_MKDIR -p "$SYS_DOWNLOAD_PATH/sabnzbd/nzb"
        $CMD_CHMOD 777 $SYS_DOWNLOAD_PATH/sabnzbd/nzb
        $CMD_MKDIR -p "$SYS_DOWNLOAD_PATH/sabnzbd/nzb/backup"
        $CMD_CHMOD 777 $SYS_DOWNLOAD_PATH/sabnzbd/nzb/backup
}

#pkg_post_install(){
#}